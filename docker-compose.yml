version: '3.8'

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  redis_data: # Added volume for Redis persistence


services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro'
    command:
      - '--path.rootfs=/host'
      - '--web.listen-address=:9100'

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - node-exporter

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=your_strong_password # <<-- CHANGE THIS PASSWORD!
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus

  redis:
    image: redis:latest
    container_name: redis
    hostname: redis_host
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - monitoring
    restart: unless-stopped 

  app:
    build: .
    container_name: login-app
    ports:
      - "5051:5000"
    volumes:
      - ./src:/devops-final-project/src
    environment:
      - FLASK_APP=src/app.py
      - FLASK_RUN_HOST=0.0.0.0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - monitoring
    depends_on:
      - prometheus
      - redis
